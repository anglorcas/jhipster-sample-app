name: Application CI

on: [push, pull_request]

jobs:
  pipeline:
    name: jhipsterSampleApplication pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    env:
      NODE_VERSION: 20.15.0
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
      NG_CLI_ANALYTICS: false
      GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 20.15.0
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17.x'
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Install node.js packages
        run: npm install
      - name: Start services for metrics collection
        run: |
          docker-compose -f docker-compose.yml up -d
      - name: Run backend test
        id: backend_test
        run: |
          chmod +x mvnw
          npm run ci:backend:test || echo "tests_failed=$?" >> $GITHUB_ENV
      - name: Run frontend test
        id: frontend_test
        run: |
          npm run ci:frontend:test || echo "tests_failed=$?" >> $GITHUB_ENV
      - name: Collect Test Metrics
        run: |
          BACKEND_TESTS_FAILED=$(grep -c "FAIL" backend-test-results.log || true)
          FRONTEND_TESTS_FAILED=$(grep -c "FAIL" frontend-test-results.log || true)
          TOTAL_FAILED=$((BACKEND_TESTS_FAILED + FRONTEND_TESTS_FAILED))
          TOTAL_SUCCEEDED=$((TOTAL_TESTS - TOTAL_FAILED))
          echo "tests_failed $TOTAL_FAILED" > metrics.prom
          echo "tests_succeeded $TOTAL_SUCCEEDED" >> metrics.prom
      - name: Push Test Metrics to Prometheus Pushgateway
        run: |
          curl --data-binary @metrics.prom http://localhost:9091/metrics/job/github_actions
      - name: Package application
        run: npm run java:jar:prod
      - name: 'E2E: Package'
        run: npm run ci:e2e:package
      - name: 'E2E: Prepare'
        run: npm run ci:e2e:prepare
      - name: 'E2E: Run'
        run: npm run ci:e2e:run
      - name: 'E2E: Teardown'
        run: npm run ci:e2e:teardown
      - name: Stop services
        run: |
          docker-compose -f docker-compose.yml down
